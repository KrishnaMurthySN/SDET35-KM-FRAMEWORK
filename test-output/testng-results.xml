<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-14T17:22:51 IST" name="Default suite" finished-at="2022-06-14T17:23:32 IST" duration-ms="40478">
    <groups>
      <group name="smokeTest">
        <method signature="CreateOrgTest.createOrgTest()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" name="createOrgTest" class="com.crm.comcast.organizationTest.CreateOrgTest"/>
      </group> <!-- smokeTest -->
    </groups>
    <test started-at="2022-06-14T17:22:51 IST" name="Default test" finished-at="2022-06-14T17:23:32 IST" duration-ms="40478">
      <class name="com.crm.comcast.organizationTest.CreateOrgTest">
        <test-method is-config="true" signature="bs()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:22:51 IST" name="bs" finished-at="2022-06-14T17:22:51 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bs -->
        <test-method is-config="true" signature="bt()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:22:51 IST" name="bt" finished-at="2022-06-14T17:22:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bt -->
        <test-method is-config="true" signature="bc()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:22:51 IST" name="bc" finished-at="2022-06-14T17:23:02 IST" duration-ms="10863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bc -->
        <test-method is-config="true" signature="bm()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:23:02 IST" name="bm" finished-at="2022-06-14T17:23:09 IST" duration-ms="6542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="createOrgTest()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:23:09 IST" name="createOrgTest" finished-at="2022-06-14T17:23:29 IST" duration-ms="20702" status="FAIL">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[unexpected alert open: {Alert text : Organization Name Already Exists!}
  (Session info: chrome=102.0.5005.115): Organization Name Already Exists!
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KRISHNAMURTHY', ip: '192.168.139.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53551}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a55032f127d1ca220d48ef409678218f
*** Element info: {Using=class name, value=dvHeaderText}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Organization Name Already Exists!}
  (Session info: chrome=102.0.5005.115): Organization Name Already Exists!
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'KRISHNAMURTHY', ip: '192.168.139.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53551}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a55032f127d1ca220d48ef409678218f
*** Element info: {Using=class name, value=dvHeaderText}
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName(RemoteWebDriver.java:412)
at org.openqa.selenium.By$ByClassName.findElement(By.java:389)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at com.crm.comcast.generic_utilities.Webdriver_Utilities.waitForElement(Webdriver_Utilities.java:52)
at com.crm.comcast.organizationTest.CreateOrgTest.createOrgTest(CreateOrgTest.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrgTest -->
        <test-method is-config="true" signature="am()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:23:30 IST" name="am" finished-at="2022-06-14T17:23:30 IST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="ac()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:23:30 IST" name="ac" finished-at="2022-06-14T17:23:32 IST" duration-ms="1493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ac -->
        <test-method is-config="true" signature="at()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:23:32 IST" name="at" finished-at="2022-06-14T17:23:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- at -->
        <test-method is-config="true" signature="as()[pri:0, instance:com.crm.comcast.organizationTest.CreateOrgTest@28f2a10f]" started-at="2022-06-14T17:23:32 IST" name="as" finished-at="2022-06-14T17:23:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- as -->
      </class> <!-- com.crm.comcast.organizationTest.CreateOrgTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
